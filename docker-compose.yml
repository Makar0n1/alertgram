version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: alerts
    volumes:
      - postgres-data:/var/lib/postgresql/data
  email-ingestor:
    build: ./email-ingestor
    depends_on:
      - kafka
      - postgres
    env_file:
      - ./email-ingestor/.env
  rule-manager-api:
    build: ./rule-manager-api
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    env_file:
      - ./rule-manager-api/.env
  notification-processor:
    build: ./notification-processor
    depends_on:
      - kafka
      - postgres
    env_file:
      - ./notification-processor/.env
  telegram-sender:
    build: ./telegram-sender
    depends_on:
      - kafka
      - postgres
    env_file:
      - ./telegram-sender/.env
  frontend:
    build: ./frontend
    ports:
      - "3001:80"
    depends_on:
      - rule-manager-api
volumes:
  zookeeper-data:
  kafka-data:
  postgres-data: